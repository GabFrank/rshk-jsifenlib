plugins {
    id "java-library"
    id "maven-publish"
    id "signing"
}

group "io.github.gabfrank"
version "0.2.4-frc.12"

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withSourcesJar()
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "com.sun.xml.messaging.saaj:saaj-impl:1.5.3"
    implementation "javax.xml.soap:javax.xml.soap-api:1.4.0"
    testImplementation group: "junit", name: "junit", version: "4.13.1"
    testImplementation "org.hamcrest:hamcrest:2.2"
}

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

javadoc {
    options.charSet = "UTF-8"
    options.encoding = "UTF-8"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = "jsifenlib"
            from components.java

            pom {
                name = "FRC jsifenlib"
                description = "Fork de RSHK jsifenlib con correcciones para XML mal formado en eventos de cancelaci√≥n."
                url = "https://github.com/GabFrank/rshk-jsifenlib/"
                licenses {
                    license {
                        name = "MIT License"
                        url = "https://github.com/roshkadev/rshk-jsifenlib/blob/master/LICENCIA.md/"
                    }
                }
                developers {
                    developer {
                        id = "pablo"
                        name = "Pablo Santa Cruz"
                        email = "pablo@roshka.com"
                    }
                    developer {
                        id = "david-ayala"
                        name = "David Ayala"
                        email = "dayala@taxit.com.py"
                    }
                    developer {
                        id = "martinzarza"
                        name = "Martin Zarza"
                        email = "mzarza99@gmail.com"
                    }
                    developer {
                        id = "gabfrank"
                        name = "Gabriel Frank"
                        email = "gabfrank@gmail.com"
                    }
                }
                scm {
                    connection = "scm:git:git://github.com/GabFrank/rshk-jsifenlib.git/"
                    developerConnection = "scm:git:ssh://github.com/GabFrank/rshk-jsifenlib.git/"
                    url = "https://github.com/GabFrank/rshk-jsifenlib/"
                }
            }
        }
    }

    repositories {
        maven {
            name = "OSSRH"
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = System.getenv("CENTRAL_USERNAME")
                password = System.getenv("CENTRAL_PASSWORD")
            }
        }
    }
}

signing {
    required false
    if (System.getenv("GPG_KEY") != null && !System.getenv("GPG_KEY").isEmpty()) {
        useInMemoryPgpKeys(System.getenv("GPG_KEY"), System.getenv("GPG_PASSWORD"))
        sign publishing.publications.mavenJava
    }
}
